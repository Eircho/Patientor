{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eirfa\\\\Desktop\\\\My Projects\\\\Patientor\\\\frontend\\\\src\\\\components\\\\PatientPage\\\\AddEntryModal\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { Dialog, DialogTitle, DialogContent, Divider, Alert, InputLabel, Select, MenuItem } from '@mui/material';\nimport AddEntryForm from './AddEntryForm';\nimport { EntryType } from '../../../types';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddEntryModal = _ref => {\n  _s();\n  let {\n    modalOpen,\n    onClose,\n    onSubmit,\n    error,\n    diagnoses\n  } = _ref;\n  const [type, setType] = useState();\n  const onTypeChange = event => {\n    event.preventDefault();\n    if (typeof event.target.value === \"string\") {\n      const value = event.target.value;\n      const type = Object.values(EntryType).find(g => g.toString() === value);\n      if (type) {\n        setType(type);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    fullWidth: true,\n    open: modalOpen,\n    onClose: () => onClose(),\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Add a new entry\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        children: \"Entry Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        label: \"Gender\",\n        fullWidth: true,\n        value: type || \"\",\n        onChange: onTypeChange,\n        defaultValue: \"\",\n        children: Object.values(EntryType).map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: option,\n          children: option\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), type ? /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(AddEntryForm, {\n        onSubmit: onSubmit,\n        onCancel: onClose,\n        type: type,\n        diagnoses: diagnoses\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(AddEntryModal, \"9HMTvVureOCk+NilmrU4nb5zKXs=\");\n_c = AddEntryModal;\nexport default AddEntryModal;\nvar _c;\n$RefreshReg$(_c, \"AddEntryModal\");","map":{"version":3,"names":["Dialog","DialogTitle","DialogContent","Divider","Alert","InputLabel","Select","MenuItem","AddEntryForm","EntryType","useState","AddEntryModal","modalOpen","onClose","onSubmit","error","diagnoses","type","setType","onTypeChange","event","preventDefault","target","value","Object","values","find","g","toString","map","option"],"sources":["C:/Users/eirfa/Desktop/My Projects/Patientor/frontend/src/components/PatientPage/AddEntryModal/index.tsx"],"sourcesContent":["import { Dialog, DialogTitle, DialogContent, Divider, Alert, InputLabel, Select, MenuItem, SelectChangeEvent } from '@mui/material';\r\n\r\nimport AddEntryForm from './AddEntryForm';\r\nimport { EntryFormValues, EntryType, Diagnosis } from '../../../types';\r\nimport { useState } from 'react';\r\n\r\ninterface Props {\r\n  modalOpen: boolean;\r\n  onClose: () => void;\r\n  onSubmit: (values: EntryFormValues) => void;\r\n  error?: string;\r\n  diagnoses: Diagnosis[]\r\n}\r\n\r\nconst AddEntryModal = ({ modalOpen, onClose, onSubmit, error, diagnoses }: Props) => {\r\n  const [type, setType] = useState<EntryType>();\r\n\r\n  const onTypeChange = (event: SelectChangeEvent<string>) => {\r\n    event.preventDefault();\r\n    if ( typeof event.target.value === \"string\") {\r\n      const value = event.target.value;\r\n      const type = Object.values(EntryType).find(g => g.toString() === value);\r\n      if (type) {\r\n        setType(type);\r\n      }\r\n    }\r\n  };\r\n\r\n  return(\r\n    <Dialog fullWidth={true} open={modalOpen} onClose={() => onClose()}>\r\n      <DialogTitle>Add a new entry</DialogTitle>\r\n      <Divider />\r\n      \r\n      <DialogContent>\r\n      <InputLabel>Entry Type</InputLabel>\r\n        <Select\r\n          label=\"Gender\"\r\n          fullWidth\r\n          value={type || \"\"}\r\n          onChange={onTypeChange}\r\n          defaultValue=\"\"\r\n        >\r\n        {Object.values(EntryType).map(option =>\r\n          <MenuItem key={option} value={option}>\r\n            {option}\r\n          </MenuItem>\r\n        )}\r\n        </Select>\r\n      </DialogContent>\r\n      \r\n      {type ? \r\n      <DialogContent>\r\n        {error && <Alert severity=\"error\">{error}</Alert>}\r\n        <AddEntryForm onSubmit={onSubmit} onCancel={onClose} type={type} diagnoses={diagnoses}/>\r\n      </DialogContent> :\r\n      null\r\n      }\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default AddEntryModal;"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,WAAW,EAAEC,aAAa,EAAEC,OAAO,EAAEC,KAAK,EAAEC,UAAU,EAAEC,MAAM,EAAEC,QAAQ,QAA2B,eAAe;AAEnI,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAA0BC,SAAS,QAAmB,gBAAgB;AACtE,SAASC,QAAQ,QAAQ,OAAO;AAAC;AAUjC,MAAMC,aAAa,GAAG,QAA+D;EAAA;EAAA,IAA9D;IAAEC,SAAS;IAAEC,OAAO;IAAEC,QAAQ;IAAEC,KAAK;IAAEC;EAAiB,CAAC;EAC9E,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,EAAa;EAE7C,MAAMS,YAAY,GAAIC,KAAgC,IAAK;IACzDA,KAAK,CAACC,cAAc,EAAE;IACtB,IAAK,OAAOD,KAAK,CAACE,MAAM,CAACC,KAAK,KAAK,QAAQ,EAAE;MAC3C,MAAMA,KAAK,GAAGH,KAAK,CAACE,MAAM,CAACC,KAAK;MAChC,MAAMN,IAAI,GAAGO,MAAM,CAACC,MAAM,CAAChB,SAAS,CAAC,CAACiB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,QAAQ,EAAE,KAAKL,KAAK,CAAC;MACvE,IAAIN,IAAI,EAAE;QACRC,OAAO,CAACD,IAAI,CAAC;MACf;IACF;EACF,CAAC;EAED,oBACE,QAAC,MAAM;IAAC,SAAS,EAAE,IAAK;IAAC,IAAI,EAAEL,SAAU;IAAC,OAAO,EAAE,MAAMC,OAAO,EAAG;IAAA,wBACjE,QAAC,WAAW;MAAA,UAAC;IAAe;MAAA;MAAA;MAAA;IAAA,QAAc,eAC1C,QAAC,OAAO;MAAA;MAAA;MAAA;IAAA,QAAG,eAEX,QAAC,aAAa;MAAA,wBACd,QAAC,UAAU;QAAA,UAAC;MAAU;QAAA;QAAA;QAAA;MAAA,QAAa,eACjC,QAAC,MAAM;QACL,KAAK,EAAC,QAAQ;QACd,SAAS;QACT,KAAK,EAAEI,IAAI,IAAI,EAAG;QAClB,QAAQ,EAAEE,YAAa;QACvB,YAAY,EAAC,EAAE;QAAA,UAEhBK,MAAM,CAACC,MAAM,CAAChB,SAAS,CAAC,CAACoB,GAAG,CAACC,MAAM,iBAClC,QAAC,QAAQ;UAAc,KAAK,EAAEA,MAAO;UAAA,UAClCA;QAAM,GADMA,MAAM;UAAA;UAAA;UAAA;QAAA,QAEV;MACZ;QAAA;QAAA;QAAA;MAAA,QACQ;IAAA;MAAA;MAAA;MAAA;IAAA,QACK,EAEfb,IAAI,gBACL,QAAC,aAAa;MAAA,WACXF,KAAK,iBAAI,QAAC,KAAK;QAAC,QAAQ,EAAC,OAAO;QAAA,UAAEA;MAAK;QAAA;QAAA;QAAA;MAAA,QAAS,eACjD,QAAC,YAAY;QAAC,QAAQ,EAAED,QAAS;QAAC,QAAQ,EAAED,OAAQ;QAAC,IAAI,EAAEI,IAAK;QAAC,SAAS,EAAED;MAAU;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QAC1E,GAChB,IAAI;EAAA;IAAA;IAAA;IAAA;EAAA,QAEG;AAEb,CAAC;AAAA,GA7CKL,aAAa;AAAA,KAAbA,aAAa;AA+CnB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}