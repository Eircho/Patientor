{"ast":null,"code":"export let Gender;\n(function (Gender) {\n  Gender[\"Male\"] = \"male\";\n  Gender[\"Female\"] = \"female\";\n  Gender[\"Other\"] = \"other\";\n})(Gender || (Gender = {}));\nexport let EntryType;\n(function (EntryType) {\n  EntryType[\"Hospital\"] = \"Hospital\";\n  EntryType[\"HealthCheck\"] = \"Health Check\";\n  EntryType[\"OccupationalHealthcare\"] = \"Occupational Healthcare\";\n})(EntryType || (EntryType = {}));\nexport let HealthCheckRating;\n(function (HealthCheckRating) {\n  HealthCheckRating[\"Healthy\"] = \"0\";\n  HealthCheckRating[\"LowRisk\"] = \"1\";\n  HealthCheckRating[\"HighRisk\"] = \"2\";\n  HealthCheckRating[\"CriticalRisk\"] = \"3\";\n})(HealthCheckRating || (HealthCheckRating = {}));","map":{"version":3,"names":["Gender","EntryType","HealthCheckRating"],"sources":["C:/Users/eirfa/Desktop/My Projects/Patientor/frontend/src/types.ts"],"sourcesContent":["export interface Diagnosis {\r\n  code: string;\r\n  name: string;\r\n  latin?: string;\r\n}\r\n\r\nexport enum Gender {\r\n  Male = \"male\",\r\n  Female = \"female\",\r\n  Other = \"other\"\r\n}\r\n\r\nexport enum EntryType {\r\n  Hospital = 'Hospital',\r\n  HealthCheck = 'Health Check',\r\n  OccupationalHealthcare = 'Occupational Healthcare'\r\n}\r\n\r\nexport enum HealthCheckRating {\r\n  \"Healthy\" = \"0\",\r\n  \"LowRisk\" = \"1\",\r\n  \"HighRisk\" = \"2\",\r\n  \"CriticalRisk\" = \"3\"\r\n}\r\n\r\nexport interface Discharge {\r\n  date: string | undefined,\r\n  criteria: string | undefined\r\n}\r\n\r\nexport interface SickLeave {\r\n  startDate: string | undefined,\r\n  endDate: string | undefined\r\n}\r\n\r\ninterface BaseEntry {\r\n  id: string;\r\n  description: string;\r\n  date: string;\r\n  specialist: string;\r\n  diagnosisCodes?: Array<Diagnosis['code']>;\r\n}\r\n\r\ninterface HealthCheckEntry extends BaseEntry {\r\n  type: \"HealthCheck\";\r\n  healthCheckRating: HealthCheckRating;\r\n}\r\n\r\ninterface HospitalEntry extends BaseEntry {\r\n  type: \"Hospital\";\r\n  discharge: Discharge\r\n}\r\n\r\ninterface OccupationalHealthcareEntry extends BaseEntry {\r\n  type: \"OccupationalHealthcare\";\r\n  employerName: string\r\n  sickLeave?: SickLeave\r\n}\r\n\r\nexport type Entry =\r\n  | HospitalEntry\r\n  | OccupationalHealthcareEntry\r\n  | HealthCheckEntry;\r\n\r\nexport interface Patient {\r\n  id: string;\r\n  name: string;\r\n  ssn: string;\r\n  occupation: string;\r\n  gender: Gender;\r\n  dateOfBirth: string;\r\n  entries: Entry[]\r\n}\r\n\r\nexport type PatientFormValues = Omit<Patient, \"id\" | \"entries\">;\r\n\r\ntype UnionOmit<T, K extends string | number | symbol> = T extends unknown ? Omit<T, K> : never;\r\n\r\nexport type EntryFormValues = UnionOmit<Entry, 'id'>;"],"mappings":"AAMA,WAAYA,MAAM;AAIjB,WAJWA,MAAM;EAANA,MAAM;EAANA,MAAM;EAANA,MAAM;AAAA,GAANA,MAAM,KAANA,MAAM;AAMlB,WAAYC,SAAS;AAIpB,WAJWA,SAAS;EAATA,SAAS;EAATA,SAAS;EAATA,SAAS;AAAA,GAATA,SAAS,KAATA,SAAS;AAMrB,WAAYC,iBAAiB;AAK5B,WALWA,iBAAiB;EAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAjBA,iBAAiB;AAAA,GAAjBA,iBAAiB,KAAjBA,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}